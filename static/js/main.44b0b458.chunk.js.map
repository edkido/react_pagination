{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","numOfPage","Math","ceil","buttonsOnPage","choosePage","elementButton","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","button","active","concat","items","options","App","setPerPage","useState","setCurrentPage","itemsOnPage","useMemo","indexOfFirstItem","indexOfLastItem","slice","length","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIF,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAgBf,EAAW,EAAGY,GAE9BI,EAAcC,IACdA,IAAkBP,GACpBC,EAAaM,IAIjB,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBb,IAAqBU,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAASA,IAAMT,EAAWN,EAAc,GAAGU,SAC5C,WAKFL,EAAcW,KAAIC,GACjBN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEM,OAAQD,IAAWjB,IAAeU,SAG/DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAK,OAAMF,GACVF,QAASA,IAAMT,EAAWW,GAAQP,SAEjCO,KAREA,KAaTN,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUb,IAAgBE,IAAaQ,SACtEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QAASA,IAAMT,EAAWN,EAAc,GAAGU,SAC5C,eCzDHU,EAAQ9B,EAAW,EAAG,IAAI0B,KAAItB,IAAMA,IAEpC2B,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgBA,KAC3B,MAAOvB,EAASwB,GAAcC,mBAASH,EAAQ,KACxCrB,EAAayB,GAAkBD,mBAAS,GAOzCE,EAAcC,mBAAQ,KAC1B,MAAMC,EAAmB5B,EAAcD,EAAUA,EAC3C8B,EAAkB7B,EAAcD,EAEtC,OAAOqB,EAAMU,MAAMF,EAAkBC,KACpC,CAAC7B,EAAaD,IAEjB,OACES,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAS,OACvBnB,EAAW,YAAAmB,OAAWO,EAAY,GAAE,OAAAP,OAAMO,EAAYA,EAAYK,OAAS,GAAE,QAAAZ,OAxBhF,GAwB4F,OAGpGX,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRqB,GAAG,kBACHvB,UAAU,eACVwB,MAAOlC,EACPmC,SA3BkBC,IAC1BZ,GAAYY,EAAMC,OAAOH,OACzBR,EAAe,IAyBsBf,SAE5BW,EAAQL,KAAIqB,GACX1B,cAAA,UAAqBsB,MAAOI,EAAO3B,SAChC2B,GADUA,SAOnB1B,cAAA,SAAO2B,QAAQ,kBAAkB7B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACf,EAAU,CACTE,MAlDM,GAmDNC,QAASA,EACTC,YAAaA,EACbC,aAAcgB,GAAUQ,EAAeR,KAGzCN,cAAA,MAAAD,SACGgB,EAAYV,KAAIuB,GACf5B,cAAA,MAAe,UAAQ,OAAMD,SAAA,QAAAS,OAAUoB,IAA9BA,WC9DnBC,IAASC,OAAO9B,cAACW,EAAG,IAAKoB,SAASC,eAAe,U","file":"static/js/main.44b0b458.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (buttonPage: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numOfPage = Math.ceil(total / perPage);\n  const buttonsOnPage = getNumbers(1, numOfPage);\n\n  const choosePage = (elementButton: number) => {\n    if (elementButton !== currentPage) {\n      onPageChange(elementButton);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => choosePage(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {buttonsOnPage.map(button => (\n        <li\n          className={cn('page-item', { active: button === currentPage })}\n          key={button}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${button}`}\n            onClick={() => choosePage(button)}\n          >\n            {button}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: currentPage === numOfPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numOfPage}\n          onClick={() => choosePage(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => +n);\nconst total = 42;\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(options[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const setPerPageSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const itemsOnPage = useMemo(() => {\n    const indexOfFirstItem = currentPage * perPage - perPage;\n    const indexOfLastItem = currentPage * perPage;\n\n    return items.slice(indexOfFirstItem, indexOfLastItem);\n  }, [currentPage, perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsOnPage[0]} - ${itemsOnPage[itemsOnPage.length - 1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={setPerPageSelector}\n          >\n            {options.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={button => setCurrentPage(button)}\n      />\n\n      <ul>\n        {itemsOnPage.map(item => (\n          <li key={item} data-cy=\"item\">{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}